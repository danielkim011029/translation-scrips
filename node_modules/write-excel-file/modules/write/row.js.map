{"version":3,"file":"row.js","names":["generateCell","generateRow","row","rowIndex","getStyle","getSharedString","customFont","dateFormat","usesSchema","rowNumber","rowHeight","rowCells","map","cell","columnIndex","align","alignVertical","fontFamily","fontSize","fontWeight","fontStyle","height","wrap","color","backgroundColor","borderColor","borderStyle","leftBorderColor","leftBorderStyle","rightBorderColor","rightBorderStyle","topBorderColor","topBorderStyle","bottomBorderColor","bottomBorderStyle","type","value","format","isEmpty","undefined","detectValueType","String","Date","Number","Error","cellStyleId","join","Boolean"],"sources":["../../source/write/row.js"],"sourcesContent":["// Copy-pasted from:\r\n// https://github.com/davidramos-om/zipcelx-on-steroids/blob/master/src/formatters/rows/formatRow.js\r\n\r\nimport generateCell from './cell.js'\r\n\r\n// import Integer from '../types/Integer.js'\r\n\r\nexport default function generateRow(row, rowIndex, {\r\n\tgetStyle,\r\n\tgetSharedString,\r\n\tcustomFont,\r\n\tdateFormat,\r\n\tusesSchema\r\n}) {\r\n\t// To ensure the row number starts as in Excel.\r\n\tconst rowNumber = rowIndex + 1\r\n\tlet rowHeight\r\n\tconst rowCells = row\r\n\t\t.map((cell, columnIndex) => {\r\n\t\t\tconst {\r\n\t\t\t\talign,\r\n\t\t\t\talignVertical,\r\n\t\t\t\tfontFamily,\r\n\t\t\t\tfontSize,\r\n\t\t\t\tfontWeight,\r\n\t\t\t\tfontStyle,\r\n\t\t\t\theight,\r\n\t\t\t\twrap,\r\n\t\t\t\tcolor,\r\n\t\t\t\tbackgroundColor,\r\n\t\t\t\tborderColor,\r\n\t\t\t\tborderStyle,\r\n\t\t\t\tleftBorderColor,\r\n\t\t\t\tleftBorderStyle,\r\n\t\t\t\trightBorderColor,\r\n\t\t\t\trightBorderStyle,\r\n\t\t\t\ttopBorderColor,\r\n\t\t\t\ttopBorderStyle,\r\n\t\t\t\tbottomBorderColor,\r\n\t\t\t\tbottomBorderStyle\r\n\t\t\t} = cell\r\n\r\n\t\t\tlet {\r\n\t\t\t\ttype,\r\n\t\t\t\tvalue,\r\n\t\t\t\tformat\r\n\t\t\t} = cell\r\n\r\n\t\t\tif (isEmpty(value)) {\r\n\t\t\t\tvalue = null\r\n\t\t\t} else {\r\n\t\t\t\t// Get cell value type.\r\n\t\t\t\tif (type === undefined) {\r\n\t\t\t\t\tif (!usesSchema) {\r\n\t\t\t\t\t\ttype = detectValueType(value)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (type === undefined) {\r\n\t\t\t\t\t\t// The default cell value type is `String`.\r\n\t\t\t\t\t\ttype = String\r\n\t\t\t\t\t\tvalue = String(value)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Validate `format` property.\r\n\t\t\tif (format) {\r\n\t\t\t\tif (type !== Date &&  type !== Number) { // && type !== Integer) {\r\n\t\t\t\t\tthrow new Error('`format` can only be used on `Date` or `Number` cells') // or `Integer` cells')\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (type === Date) {\r\n\t\t\t\t\tformat = dateFormat\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet cellStyleId\r\n\t\t\tif (\r\n\t\t\t\tfontFamily ||\r\n\t\t\t\tfontSize ||\r\n\t\t\t\tfontWeight ||\r\n\t\t\t\tfontStyle ||\r\n\t\t\t\talign ||\r\n\t\t\t\talignVertical ||\r\n\t\t\t\tformat ||\r\n\t\t\t\twrap ||\r\n\t\t\t\tcolor ||\r\n\t\t\t\tbackgroundColor ||\r\n\t\t\t\tborderColor ||\r\n\t\t\t\tborderStyle ||\r\n\t\t\t\tleftBorderColor ||\r\n\t\t\t\tleftBorderStyle ||\r\n\t\t\t\trightBorderColor ||\r\n\t\t\t\trightBorderStyle ||\r\n\t\t\t\ttopBorderColor ||\r\n\t\t\t\ttopBorderStyle ||\r\n\t\t\t\tbottomBorderColor ||\r\n\t\t\t\tbottomBorderStyle ||\r\n\t\t\t\tcustomFont\r\n\t\t\t) {\r\n\t\t\t\tcellStyleId = getStyle(\r\n\t\t\t\t\tfontFamily,\r\n\t\t\t\t\tfontSize,\r\n\t\t\t\t\tfontWeight,\r\n\t\t\t\t\tfontStyle,\r\n\t\t\t\t\talign,\r\n\t\t\t\t\talignVertical,\r\n\t\t\t\t\tformat,\r\n\t\t\t\t\twrap,\r\n\t\t\t\t\tcolor,\r\n\t\t\t\t\tbackgroundColor,\r\n\t\t\t\t\tborderColor,\r\n\t\t\t\t\tborderStyle,\r\n\t\t\t\t\tleftBorderColor,\r\n\t\t\t\t\tleftBorderStyle,\r\n\t\t\t\t\trightBorderColor,\r\n\t\t\t\t\trightBorderStyle,\r\n\t\t\t\t\ttopBorderColor,\r\n\t\t\t\t\ttopBorderStyle,\r\n\t\t\t\t\tbottomBorderColor,\r\n\t\t\t\t\tbottomBorderStyle\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\tif (height) {\r\n\t\t\t\tif (rowHeight === undefined || rowHeight < height) {\r\n\t\t\t\t\trowHeight = height\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn generateCell(\r\n\t\t\t\trowNumber,\r\n\t\t\t\tcolumnIndex,\r\n\t\t\t\tvalue,\r\n\t\t\t\ttype,\r\n\t\t\t\tcellStyleId,\r\n\t\t\t\tgetSharedString\r\n\t\t\t)\r\n\t\t})\r\n\t\t.join('')\r\n\r\n\treturn `<row r=\"${rowNumber}\"` +\r\n\t\t(rowHeight ? ` ht=\"${rowHeight}\" customHeight=\"1\"` : '') +\r\n\t\t'>' +\r\n\t\trowCells +\r\n\t\t'</row>'\r\n}\r\n\r\nfunction isEmpty(value) {\r\n  return value === undefined || value === null || value === ''\r\n}\r\n\r\nfunction detectValueType(value) {\r\n  switch (typeof value) {\r\n    case 'string':\r\n      return String\r\n    case 'number':\r\n      return Number\r\n    case 'boolean':\r\n      return Boolean\r\n    default:\r\n      if (value instanceof Date) {\r\n        return Date\r\n      }\r\n  }\r\n}"],"mappings":"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"}